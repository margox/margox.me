/**
 * Lightbox
 * @author margox
 * @version 1.0.0
 * @license MIT
 */
(function ($) {

    "use strict";

    $.fn.Lightbox = function (options) {

        var defaults = {
                obj: null,
                btnPrevText: "PREV",
                btnNextText: "NEXT",
                srcAttr: 'href',
                single: false
            },
            options      = $.extend(defaults, options),
            lightboxObj  = options.obj != null ? $(options.obj) : $(this),
            DataUrl      = "",
            ImageWidth   = 0,
            ImageHeight  = 0,
            SartX        = 0,
            SartY        = 0,
            StartWidth   = 0,
            StartHeight  = 0,
            EndX         = 0,
            EndY         = 0,
            EndWidth     = 0,
            EndHeight    = 0,
            MaxWidth     = 0,
            MaxHeight    = 0,
            ScaleRate    = 1,
            currentIndex = 0,
            Enable       = 1,
            timmer,
            lightboxWindowWrapper,
            lightboxWindow,
            lightboxWindowImage,
            lightboxWindowImageNext,
            lightboxPrev,
            lightboxNext,
            lightboxClose,
            lightboxGroup,
            lightboxGroupName;

        if (lightboxObj.length == 0) {
            return false;
        }

        if ($("#lightbox-window-wrapper").length == 0) {
            $("body").append('<div id="lightbox-window-wrapper"><i class="icon-spinner9 spinner"></i><div id="lightbox-window"><img src="#" id="lightbox-window-image" alt="current image placeholder"><img src="#" id="lightbox-window-image-next" alt="next image placeholder"></div><div id="lightbox-window-close"></div><a id="lightbox-window-btn-next">' + options.btnNextText + '</a><a id="lightbox-window-btn-prev">' + options.btnPrevText + '</a></div>')
        }

        lightboxWindowWrapper   = $("#lightbox-window-wrapper");
        lightboxWindow          = $("#lightbox-window");
        lightboxWindowImage     = $("#lightbox-window-image");
        lightboxWindowImageNext = $("#lightbox-window-image-next");
        lightboxPrev            = $("#lightbox-window-btn-prev");
        lightboxNext            = $("#lightbox-window-btn-next");
        lightboxClose           = $("#lightbox-window-close");
        
        if (options.single) {
            lightboxPrev.addClass('hidden');
            lightboxNext.addClass('hidden');
        } else {
            lightboxPrev.removeClass('hidden');
            lightboxNext.removeClass('hidden');
        }

        lightboxObj.on("click", function () {

            lightboxGroupName = $(this).data('lightbox-group');

            if (lightboxGroupName) {
                lightboxGroup = $("[data-lightbox-group='" + lightboxGroupName + "']");
            } else {
                lightboxGroup = lightboxObj;
            }

            currentIndex = lightboxGroup.index(this);
            DataUrl      = $(this).attr(options.srcAttr);

            if ($(window).width() < 600) {
                window.open(DataUrl);
                return false;
            }

            if (DataUrl) {

                $('#lightbox-window-image').remove();
                lightboxWindowImage = $('<img src="" id="lightbox-window-image"/>');
                lightboxWindowImage.appendTo(lightboxWindow);
                lightboxWindowWrapper.fadeIn();


                //lightboxWindow.animate({
                //    width   : 200,
                //    height  : 200,
                //    top     : 0,
                //    opacity : 1
                //}, 400);

                lightboxWindowImage.load(function () {

                    ImageHeight = this.naturalHeight;
                    ImageWidth  = this.naturalWidth;
                    MaxWidth    = $(window).width() - 120;
                    MaxHeight   = $(window).height() - 100;

                    if (ImageHeight > MaxHeight) {

                        ScaleRate   = MaxHeight / ImageHeight;
                        ImageHeight = MaxHeight;
                        ImageWidth  = ImageWidth * ScaleRate;

                        if (ImageWidth > MaxWidth) {

                            ScaleRate   = MaxWidth / ImageWidth;
                            ImageWidth  = MaxWidth;
                            ImageHeight = ImageHeight * ScaleRate;

                        }

                    }

                    if (ImageWidth > MaxWidth) {

                        ScaleRate   = MaxWidth / ImageWidth;
                        ImageWidth  = MaxWidth;
                        ImageHeight = ImageHeight * ScaleRate;

                        if (ImageHeight > MaxHeight) {

                            ScaleRate   = MaxHeight / ImageHeight;
                            ImageHeight = MaxHeight;
                            ImageWidth  = ImageWidth * ScaleRate;

                        }

                    }

                    lightboxWindowImage.width(ImageWidth);
                    lightboxWindowImage.height(ImageHeight);

                    lightboxWindow.animate({
                        width   : ImageWidth,
                        height  : ImageHeight,
                        top     : 0,
                        opacity : 1
                    }, function () {
                        lightboxWindowImage.animate({
                            opacity: 1
                        });
                    });

                });

                lightboxWindowImage.attr("src", DataUrl);

            }

            lightboxPrev.unbind('click');
            lightboxNext.unbind('click');
            lightboxClose.unbind('click');

            lightboxClose.on("click", function () {

                var currentItem;

                if (currentIndex >= 0) {

                    clearInterval(timmer);

                    lightboxWindow.animate({
                        top  : -50,
                        opacity    : 0
                    }, 200, function () {
                        lightboxWindowWrapper.fadeOut();
                    });

                }

            });

            lightboxNext.on("click", function () {
                Dolightbox('next');
            });

            lightboxPrev.on("click", function () {
                Dolightbox('prev');
            });

            return false;

        });

        function Dolightbox(event) {

            var NextIndex,
                ImgSrc;

            if (!Enable) {
                return false
            }

            if (event == 'next') {
                NextIndex = currentIndex < lightboxGroup.length - 1 ? currentIndex + 1 : 0;
            } else {
                NextIndex = currentIndex > 0 ? currentIndex - 1 : lightboxGroup.length - 1;
            }
            ImgSrc = lightboxGroup.eq(NextIndex).attr(options.srcAttr);

            lightboxWindowImage.animate({
                opacity: 0
            }, 300, function () {

                $('#lightbox-window-image').remove();
                lightboxWindowImage = $('<img src="" id="lightbox-window-image"/>');
                lightboxWindowImage.appendTo(lightboxWindow);
                currentIndex = NextIndex;

                lightboxWindowImage.load(function () {

                    ImageHeight = lightboxWindowImage[0].height;
                    ImageWidth  = lightboxWindowImage[0].width;
                    MaxWidth    = $(window).width() - 120;
                    MaxHeight   = $(window).height() - 100;

                    if (ImageHeight > MaxHeight) {

                        ScaleRate   = MaxHeight / ImageHeight;
                        ImageHeight = MaxHeight;
                        ImageWidth  = ImageWidth * ScaleRate;

                        if (ImageWidth > MaxWidth) {

                            ScaleRate   = MaxWidth / ImageWidth;
                            ImageWidth  = MaxWidth;
                            ImageHeight = ImageHeight * ScaleRate;

                        }

                    }

                    if (ImageWidth > MaxWidth) {

                        ScaleRate   = MaxWidth / ImageWidth;
                        ImageWidth  = MaxWidth;
                        ImageHeight = ImageHeight * ScaleRate;

                        if (ImageHeight > MaxHeight) {

                            ScaleRate   = MaxHeight / ImageHeight;
                            ImageHeight = MaxHeight;
                            ImageWidth  = ImageWidth * ScaleRate;

                        }

                    }

                    lightboxWindowImage.width(ImageWidth);
                    lightboxWindowImage.height(ImageHeight);
                    
                    lightboxWindow.animate({
                        width      : ImageWidth,
                        height     : ImageHeight,
                        opacity    : 1
                    }, 300, function () {
                        lightboxWindowImage.animate({
                            opacity: 1
                        });
                    });

                });

                lightboxWindowImage.attr("src", ImgSrc);

            });

        }

    }

}(jQuery));